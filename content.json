{"meta":{"title":"Y-Blog","subtitle":"Y-Blog","description":"","author":"Tanqy","url":"https://tqyao.cn","root":"/"},"pages":[{"title":"","date":"2020-09-24T09:53:08.164Z","updated":"2020-09-24T09:44:58.885Z","comments":true,"path":"404.html","permalink":"https://tqyao.cn/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"所有分类","date":"2020-09-24T09:42:02.595Z","updated":"2020-09-24T09:42:02.595Z","comments":true,"path":"categories/index.html","permalink":"https://tqyao.cn/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-09-26T07:02:55.729Z","updated":"2020-09-26T07:02:54.099Z","comments":true,"path":"tags/index.html","permalink":"https://tqyao.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"【干货】git使用总结","slug":"【干货】git使用总结","date":"2020-10-21T11:14:31.000Z","updated":"2020-10-21T12:48:41.011Z","comments":true,"path":"2020/10/21/【干货】git使用总结/","link":"","permalink":"https://tqyao.cn/2020/10/21/%E3%80%90%E5%B9%B2%E8%B4%A7%E3%80%91git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/","excerpt":"","text":"1.基础概念 1.1 git中的文件有以下几种状态： Untracked：未跟踪,此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged Unmodify：文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致.这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件 Modified：文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态,使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 Staged：暂存状态， 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致,文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified committed: 已提交，提交到了本地版本库中Repository（本地仓库），这是你想回退版本的话可以执行git reset --hard HEAD^ 1.2 工作区域 1.2.1 本地计算机 Working Directory（工作目录）：即正在编辑的文件状态。文件状态为未跟踪（untrack）和已修改（modified）在此区域内。 Index / Stage（暂存区）：保存了下次将提交的文件列表信息。文件状态为已暂存（staged）在此区域内。 Repository（本地仓库）：提交到本地仓库的文件。 1.2.2 远程计算机 Remote Repository（远程仓库）：已提交到远程计算机内的文件。 2.常见操作2.1 撤销修改 情景一：git checkout –文件 意思就是把XX（下面的Branch1.java）文件在工作区的修改全部撤销，有两种情况 情况一： Branch1.java 在版本库中，对 Branch1.java 进行了修改但是没有暂存（git add 文件），此时文件此时是处于Modified状态 使用git checkout -- git-demo/src/test/java/cn/tqyao/git/config/Branch1.java，此时 Branch1.java 回到和版本库一模一样的状态 情况二： 文件在版本库中，且文件 Branch1.java 已经添加到暂存区，此时文件处于modified状态 git checkout -- git-demo/src/test/java/cn/tqyao/git/config/Branch1.java，此时 Branch1.java 回到添加到暂存区后的状态 情景二情景三","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://tqyao.cn/tags/git/"}]},{"title":"【基础】 Html学习","slug":"Html学习","date":"2020-09-28T01:58:23.000Z","updated":"2020-10-07T07:24:35.743Z","comments":true,"path":"2020/09/28/Html学习/","link":"","permalink":"https://tqyao.cn/2020/09/28/Html%E5%AD%A6%E4%B9%A0/","excerpt":"最近开始前端的学习，作为后端人员，感觉前端还是需要会那么一点的，不管是对于自己写项目还是去找工作会前端都挺香的。此篇文章只作为个人学习过程记录、笔记总结，自己看得懂就好:)","text":"最近开始前端的学习，作为后端人员，感觉前端还是需要会那么一点的，不管是对于自己写项目还是去找工作会前端都挺香的。此篇文章只作为个人学习过程记录、笔记总结，自己看得懂就好:) HTML标签元素标题标签 标题元素 &lt;h1&gt;&lt;/h1&gt; &lt;h2&gt;&lt;/h2&gt; &lt;h3&gt;&lt;/h3&gt; &lt;h4&gt;&lt;/h4&gt; &lt;h5&gt;&lt;/h5&gt; &lt;h6&gt;&lt;/h6&gt; 标题元素1 标题元素2 标题元素3 标题元素4 标题元素5 标题元素6 注意：h元素一般有独立默认的样式，在css 中改h标签的父类元素文本类样式是不会影响h标签样式的。2. 段落元素 &lt;p&gt;&lt;/p&gt; 换行元素 &lt;/br&gt; 文本格式化标签 加粗 &lt;strong&gt;&lt;/stong&gt; &lt;b&gt;&lt;/b&gt; 加粗 倾斜 &lt;em&gt;&lt;/em&gt; &lt;i&gt;&lt;/i&gt; 倾斜 删除 &lt;del&gt;&lt;/del&gt; &lt;s&gt;&lt;/s&gt; 删除 下划线 &lt;ins&gt;&lt;/ins&gt; &lt;u&gt;&lt;/u&gt; 下划线 所有文本格式化标签推荐用第一个 HTML常用标签元素 布局标签 &lt;div&gt;&lt;/div&gt; 用来布局的大盒子，单独占一行&lt;div&gt; 用来布局的大盒子，单独占一行 用来布局的大盒子，单独占一行 布局标签 &lt;span&gt;&lt;/span&gt; 用来布局的小盒子，一行可以多个&lt;span&gt; 123&lt;span&gt;用来布局的小盒子，一行可以多个。&lt;/span&gt;&lt;span&gt;用来布局的小盒子，一行可以多个。&lt;/span&gt;&lt;span&gt;用来布局的小盒子，一行可以多个。&lt;/span&gt; 图标标签 &lt;img /&gt; 必须属性 src ：规定显示图像的 URL。 alt : 规定图像的替代文本。 链接标签\\锚点标签&lt;a&gt;&lt;/a&gt; 链接标签 常用属性： href : url target : _blank : 在新窗口中打开被链接文档 _parent : 默认。在相同的框架中打开被链接文档。 _self : 在父框架集中打开被链接文档。 _top : 在整个窗口中打开被链接文档。 framename : 在指定的框架中打开被链接文档。 锚点标签 ：点我们点击链接，可快速定位到页面中额度某个位置使用： &lt;a href=&quot;#girl&quot;&gt; 找女票，跟我来 &lt;/a&gt; &lt;h3 id=&quot;girl&quot;&gt; 漂亮的女孩子 &lt;/h3&gt; 表格标签 &lt;talbe&gt;&lt;/table&gt; 1234567891011121314151617181920212223242526272829&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;500&quot; height=&quot;249&quot;&gt; &lt;!-- 表头域 --&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;学号&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;!-- 表内容 --&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;小明&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;01&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;小红&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;td&gt;02&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;小白&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;td&gt;03&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 无序列表 12345&lt;ul&gt; &lt;li&gt;demo1&lt;/li&gt; &lt;li&gt;demo2&lt;/li&gt; &lt;li&gt;demo3&lt;/li&gt;&lt;/ul&gt; 有序列表 12345&lt;ol&gt; &lt;li&gt;demo1&lt;/li&gt; &lt;li&gt;demo2&lt;/li&gt; &lt;li&gt;demo3&lt;/li&gt;&lt;/ol&gt; 自定义列表 12345678910&lt;dl&gt; &lt;dt&gt;关注我们&lt;/dt&gt; &lt;dd&gt;新浪微博&lt;/dd&gt; &lt;dd&gt;官方微信&lt;/dd&gt; &lt;dd&gt;联系我们&lt;/dd&gt; &lt;dt&gt;联系我们&lt;/dt&gt; &lt;dd&gt;新浪微博&lt;/dd&gt; &lt;dd&gt;官方微信&lt;/dd&gt; &lt;dd&gt;联系我们&lt;/dd&gt;&lt;/dl&gt; 关注我们 新浪微博 官方微信 联系我们联系我们 新浪微博 官方微信 联系我们 表单域 &lt;from&gt;&lt;/from&gt; 常用属性 action: 规定当提交表单时向何处发送表单数据。 method: form-data 的 HTTP 方法。 name: 规定表单的名称。 target： 规定在何处打开 action URL。 _blank _self _parent _top framename input 标签 常用属性 type：规定 input 元素的类型。 button：定义可点击按钮（多数情况下，用于通过 JavaScript 启动脚本） checkbox： 定义复选框。 file：定义输入字段和 “浏览”按钮，供文件上传。 hidden：定义隐藏的输入字段。 image：定义图像形式的提交按钮。 password：定义密码字段。该字段中的字符被掩码。 radio：定义单选按钮。 reset：定义重置按钮。重置按钮会清除表单中的所有数据。 submit：定义提交按钮。提交按钮会把表单数据发送到服务器。 text：定义单行的输入字段，用户可在其中输入文本。默认宽度为 20 个字符。 value:规定 input 元素的值。 name:定义 input 元素的名称。 label 标签 &lt;label&gt;&lt;/label&gt;&lt;label&gt; 标签为 input 元素定义标注（标记）。label 元素不会向用户呈现任何特殊效果。不过，它为鼠标用户改进了可用性。如果您在 label 元素内点击文本，就会触发此控件。就是说，当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。 &lt;label&gt; 标签的 for 属性应当与相关元素的 id 属性相同。 select 下拉表单 123456&lt;select&gt; &lt;option value=&quot;volvo&quot;&gt;Volvo&lt;/option&gt; &lt;option value=&quot;saab&quot;&gt;Saab&lt;/option&gt; &lt;option value=&quot;opel&quot;&gt;Opel&lt;/option&gt; &lt;option value=&quot;audi&quot;&gt;Audi&lt;/option&gt;&lt;/select&gt; textare 文本域标签 1&lt;textarea name=&quot;反馈&quot; id=&quot;&quot; cols=&quot;30&quot; rows=&quot;10&quot;&gt;留下你的意见&lt;/textarea&gt; 特殊字符 描述 字符代码 空格符 &amp;nbsp 大于号 &amp;gt 小于号 &amp;lt 和号 &amp;amp 正负号 &amp;plusmn 乘号 &amp;times 除号 &amp;divide Emmet语法 生成标签，输入标签名，按TAB。例如：div +TAB = &lt;div&gt;&lt;/div&gt; 生成多个 *n。div*3,可以快速生成3个div 父子关系标签。例: ul&gt;li; div&gt;h1；如果还想指定li数量直接 ul&gt;li*3 兄弟标签，用+连接即可。例： div+p 如果生成带有id或是class的标签，可以.class/#id。div.demo生成&lt;div class=&quot;demmo&quot;&gt;&lt;/div&gt; 生成div若是有顺序，可用自增符号 $ 如果想要在生成标签内写内容可以用{} CSS文本 text-indent 缩进 test-align 文本对齐方式 center rigth left: 把文本排列到左边。默认值：由浏览器决定。 justify: 实现两端对齐文本效果。 inherit: 规定应该从父元素继承 text-align 属性的值。 行内元素由于不能设置宽高，所以不能用margin来调整它在盒子中的位置，但是可以把test-align放置在它所在盒子（它的父元素）中来调整他的位置 color 字体颜色 十六进制值 - 如: ＃FF0000 一个RGB值 - 如: RGB(255,0,0) 颜色的名称 - 如: red text-decoration 设置或删除文本装饰 1text-decoration: none; 字体 font-family 文本的字体系列 注意： font-family设置几种字体名称作为后备，一次查看浏览器是否支持该种字体，是则使用。 如果字体系列名称超过一个字，则必须使用引号，如Font Family：”宋体”。多个字体系列是用一个逗号分隔指明：1p&#123;font-family:&quot;Times New Roman&quot;, Times, serif;&#125; font-style 字体样式 normal： 正常显示文本 italic： 以斜体显示 oblique： 倾斜的文字 - 文字向一边倾斜（和斜体非常类似，但不太支持） font-size 字体大小 单位： size： px em：当前字体大小（当前字体大小16px，则1em=16px） font-weight 字体粗细 normal: 400默认 bold： 粗体 700 bolder： 更粗粗体 lighter： 更细细体 inherit： 规定应该从父元素继承字体的粗细。 font 设置所有字体属性可设置的属性是（按顺序）： “font-style font-variant font-weight font-size/line-height font-family” font-size和font-family的值是必需的。 12font:15px arial,sans-serif;font:italic bold 12px/30px Georgia, serif; 背景应用场景：实际开发中常用于logo或是装饰性的小图片或者是超大图片，优点就是非常容易控制它的位置（精灵图也是一种应用场景） 背景颜色 background-color 背景图片 background-image: url(图片路径) //默认值为：none 是否平铺 background-repeat repeat no-repeat x-repeat y-repeat 背景位置 background-position left/position 分别是x和y坐标 background-position: center right 方位名词： center right left top bottom。两个方位名词可以调换效果一样，其中可以只写一个默认另一个是居中，是水平居中还是垂直居中就看你写的那个是有关x轴的还是y轴的，例如right/left是有关x轴的，默认第二个center就是垂直居中。 规定 x，y轴坐标像素：有些时候不需要背景图靠边，就可以指定x，y轴像素。只写一个就是表示x轴像素，y轴默认就是center。 背景附着 background-attachment scroll: 背景滚动 fixed: 背景固定 背景简写 background : 背景颜色 背景图片地址 背景平铺 背景滚动/固定 背景位置background: red url() no-repeat fixed center right 提示: 其实并不要求顺序，但是大家习惯约定好的顺序就是这样 背景半透明色 123backgournd: rgba(0,0,0,0.3) 最后一个参数是指透明度，也可以这样写backgournd: rgba(0,0,0,.3) css的元素显示模式 块元素 常见的块级元素：h1~h6,&lt;p&gt;,&lt;div&gt;,&lt;ul&gt;,&lt;li&gt;,&lt;ol&gt; - 独占一行 - 高度宽度，内外边距都可以控制 - 宽度默认是容器（父级宽度）的100% - 是一个容器及盒子，里头可以放行内元素和块级元素 `注意：` - 文字类元素不能放块级元素 - &lt;p&gt;标签主要用于存放文字，因此&lt;p&gt;里面不能放块级元素，特别是不能放&lt;div&gt; - 同理，&lt;h1&gt;~&lt;h6&gt;等都是文字类块级标签，里面也不能放其他块级元 行内元素 常见的行内元素：&lt;a&gt;,&lt;strong&gt;,&lt;b&gt;,&lt;em&gt;,&lt;i&gt;,&lt;del&gt;,&lt;s&gt;,&lt;ins&gt;,&lt;u&gt;,&lt;span&gt; - 相邻行内元素在一行,一行可以多个 - 高、宽直接设置是无效 - 默认宽度就是它本身内容的宽 - 行内元素只能容纳文本或其他行内元素 注意： 链接里面不能再放链接 特殊情况链接&lt;a&gt; 里面可以放块级元素，但是给&lt;a&gt; 转换一下块级模式最安全 行内块元素 在行内元素中有几个特殊的标签——&lt;img /&gt;、&lt;input /&gt;、&lt;td&gt;，它们同时具有块元素和行内元素的特点。有些资料称它们为行内块元素 和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点） 默认宽度就是它本身内容的宽度（行内元素特点）。 高度，行高、外边距以及内边距都可以控制（块级元素特点） 元素显示模式转换 display block inline inline-blockcss 三大特性 层叠性 继承性 子元素可以继承父类元素样式（text-，front-， line-这些元素开头的都可以继承，以及color属性）跟文字相关的样式 优先级 盒子模型 border 1.1 边框的宽 border-width 注意：会影响边框的实际大小 1.2 边框风格类型 border-style - solid：实现边框 - dashed：虚线边框 - dotted：点线边框 1.3 边框颜色 border-color 简写：border: 1px solide red;没有顺序区别 提示： border 也可以设置单边框样式 12border-top: 5px dashed pink border-bottom: 10px dotted 1.4 border-collapse：属于控制浏览器绘制表格边框的方式。它控制响铃单元格边框 属性 - collapse： 合并的意思 边框内外间距 padding margin 2.1 padding padding-top padding-bottom padding-right padding-left 提醒：padding会影响盒子的实际大小 &gt; 简写 1234padding: 5px //上下左右设置5pxpadding: 5px 10px //上下5px，左右10pxpadding: 5px 10px 8px //上5px，左右10px，下8pxpadding：5px 10px 15px 20px //上5px 右10px 下15px 左20px 注意：如果不指定盒子的宽高，默认继承父亲的宽高的话，是不会影响盒子的实际大小的 2.2 `margin` - margin-top - margin-bottom - margin-right - margin-left &gt; 简写同padding 2.2.1 外边距的典型应用 - 外边距可以让块级元素`水平居中对齐`，但是必须满住两个条件 1. 盒子必须指定宽度（width） 2. 盒子左右外边距都设置为`auto` 1.header &#123; width: 960px; margin: 0 auto&#125; 常见写法 123- margin-left: auto; margin-right: auto;- margin: auto;- margin: 0 auto 2.2.2 外边距合并问题 - 相邻块元素垂直外边距（margin-buttom、margin-top）的合并: 你给两个上下相邻的两个盒子分别设置（上盒子）margin-buttom：20px，给（下盒子）margin-top：10px，最终在页面展示的两个盒子的边距是20px。（取中间较大值规则） 解决：尽量只给一个盒子添加margin值 `注意：浮动和盒子不会有外边距合并问题` 2.2.3 嵌套块元素垂直外边距的塌陷 - 对于嵌套关系（父子关系）的块元素，父元素上有外边距同时子元素上也有外边距，此时父元素会塌陷较大的外边距值 解决： - 可以为父元素定义上边框 1border: 1px solid transparent - 可以为父元素定义上内边距 1padding: 1px - 可以为父元素添加 `overflow: hidden` 3. 清除内外边距 原因：网页元素很多都带有默认的内外边距，而不同的浏览器默认值又不一致。因此在网页布局前，首先要清楚一下网页元素内外边距 1234* &#123; padding:0; margin:0;&#125; 注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距。但是转换为块元素和行内块就可以 圆角边框 border-radius ：用于设置元素外边框圆角1border-radius: 20px 参数可以为数值或百分比的形式 如果是正方形，想要设置一个圆，把参数改为高度或宽度一般即可，或者直接写50% 如果是个举行，需要左右两边成弧，设置为高度的一半就可以做 改属性简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角1border-radius: 10px 15px 20px 15px 分开写： border-top-left-radius、border-top-right-radius、border-buttom-left-radius、border-bottom-left-radius 盒子阴影 box-shoadow: 为盒子添加阴影1box-shadow: h-shadow v-shadow blue spread color inset; h-shadow： 必须。水平阴影位置 v-shadow： 必须。垂直阴影位置 blur： 可选。模糊距离 spread: 可选。引用尺寸。 color： 可选。 inset： 可选。外部阴影（outerset）改为内部阴影。 注意： 默认的是外部阴影（outerset），但是不可以写否者会导致阴影无效 盒子阴影不占空间，不会影响其他盒子排列 文字阴影 text-shoadow: 为文字添加阴影 h-shadow v-shadow blur color 传统的网页布局三种方式 标准流（普通流/文档流） 标准流就是标签按照规定好的方式默认排列 1.1. 块级元素独占一行，从上到下序列排序 常用元素：div、hr、p、h1~h6、ui、ol、form、table 1.2. 行内元素按照顺序，从左到右顺序排列，碰到父级边缘就自动换行。 常用元素： span、i、a、em等 浮动 2.1. 为什么需要浮动 应用：可以让多个块级元素一行内显示 网页布局的第一准则： 多个块级元素纵向排列找标准流，横向排列找浮动 2.2. 什么是浮动 float:属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘。 none: 元素不浮动,默认值 left: 元素向左浮动 right： 元素向右浮动 2.3. 浮动的特性 2.3.1 浮动元素会脱离标准流(脱标) 浮动会脱离标准流的控制（浮）移动到指定的位置（动） 原来的位置不会保留 2.3.2 浮动的元素会一行内显示并且元素顶部对齐 多个盒子设置了浮动，它们会一行显示且顶端对齐 浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子， 多出的盒子 会另起一行对齐。 2.3.3 浮动的元素会具有行内块元素的特性. 如块级盒子没设定宽度默认和父级一样宽，一旦添加浮动则根据其内容大小来决定 浮动中间是没有缝隙的，是紧挨在一起的 行内元素同理 2.3.4 网络中的布局 第一准侧：先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置. 网页布局第二准则：先设置盒子的大小, 之后设置盒子的位置. 一个元素浮动了，理论上其余的兄弟元素也要浮动 注意：浮动的盒子只会影响浮动盒子后面的标准流,不会影响前面的标准流. 2.3.5 清除浮动 清除浮动本质是清除浮动元素脱离标准造成的影响 为什么需要清楚浮动 由于需求需要（盒子高度随内容撑开），没有给父级没高度 子盒子浮动了。 影响下面布局了，我们就应该清楚浮动了。解释： 父盒子（块元素）没有设定高度，父盒子中原本布局好的子元素由于添加了浮动元素原先在父盒子中占有的位置清空，又由于无高度块元素的高是根据子元素内容自动撑开的，导致父元素高度为0，从而影响了父元素相邻下方元素布局。 清除浮动的方法 隔墙法 父级添加样式：overflow：hidden;;缺点：溢出隐藏 父级after伪元素 父级双伪元素 1234567891011121314151617181920212223&lt;!-- 父级伪元素 --&gt;.clearfix:after &#123; content: &quot;&quot;; display: block; height: 0; clear: both; visibility: hidden; &#125; .clearfix &#123; /* IE6、7 专有 */ *zoom: 1; &#125; &lt;!-- 双伪元素 --&gt; .clearfix:before,.clearfix:after &#123; content:&quot;&quot;; display:table; &#125; .clearfix:after &#123; clear:both; &#125; .clearfix &#123; *zoom:1; &#125; CSS 书写顺序 布局定位属性：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式） 自身属性：width / height / margin / padding / border / background 文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word 其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient … 123456789101112131415161718192021222324.jdc &#123; /* 布局定位属性 */ display: block; position: relative; float: left; /* 布局定位属性 */ /* 自身属性 */ width: 100px; height: 100px; margin: 0 10px; padding: 20px 0; /* 自身属性 */ /* 文本属性 */ font-family: Arial, &#x27;Helvetica Neue&#x27;, Helvetica, sans-serif; color: #333; /* 文本属性 */ /* 其他属性（CSS3） */ background: rgba(0,0,0,.5); border-radius: 10px; /* 其他属性（CSS3） */ &#125; CSS定位浮动与定位应用场景： 基础介绍 浮动可以让多个块级盒子一行没有缝隙的排列显示，经常用于航向排列盒子 定位可以让盒子自由的在某个盒子内移动或者固定在屏幕中的某个位置，并且可以压住其他盒子 定位： 定位模式 + 偏移量 定位模式： position static：静态定位 relative：相对定位 absolute： 绝对定位 fixed：固定定位 sticky：粘性定位 定位模式 2.1. static（了解）： 静态定位是元素默认定位方式，无定位的意思 静态定位按照标准流特性摆放位置，它没有边偏移 2.2. relative： 相对定位是元素在移动位置的时候，是相对于它原来的位置来说的（自恋型）。 是相对自己原来的位置移动 原来标准流的位置继续占有，后面的盒子仍然以标准流方式对待它，因此，相对定位并没有脱标。它最典型的应用是给绝对定位当爹的。。。 2.3. absolute: 绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的（拼爹型）。 如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位（Document文档） 如果祖先元素有定位（相对、绝对，固定定位），则以最近一级有定位元素为参考点移动位置 绝对定位不占有原先位置。（脱标） 2.4. fixed 固定定位是元素固定于浏览器可视区的位置。主要使用场景： 可以在浏览器页面滚动时元素的位置不会改变 2.4.1. 以浏览器的可视窗口为参照点移动元素 - 跟父元素没有任何关系 - 不随滚动条滚动 2.4.2 固定定位不在占有原先的位置。 - 固定定位也是脱标的，其实固定定位也可以看做是一种特殊的绝对定位。 2.5. sticky 以浏览器的可视窗口为参照点移动元素（固定定位特点） 粘性定位占有原先的位置（相对定位特点） 必须添加 top 、left、right、bottom 其中一个才有效跟页面滚动搭配使用。 兼容性较差，IE 不支持。 2.6. z-index 在使用定位布局时，可能会出现盒子重叠的情况。此时，可以使用 z-index 来控制盒子的前后次序 (z轴) - 数值可以是正整数、负整数或 0, 默认是 auto，数值越大，盒子越靠 - 如果属性值相同，则按照书写顺序，后来居上 - 数字后面不能加单位 - 只有定位的盒子才有 z-index 属性 2.7. 定位的拓展 - 2.7.1. 绝对定位的盒子居中 加了绝对定位的盒子不能通过 margin:0 auto 水平居中，但是可以通过以下计算方法实现水平和垂直居中: - a. left: 50%;：让盒子的左侧移动到父级元素的水平中心位置 - b. margin-left: -100px;：让盒子向左移动自身宽度的一半。 - 2.7.2. 定位特殊特性 绝对定位和固定定位也和浮动类似。 - 行内元素添加绝对或者固定定位，可以直接设置高度和宽度。 - 块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。 - 2.7.3. 脱标的盒子不会触发外边距塌陷 浮动元素、绝对定位(固定定位）元素的都不会触发外边距合并的问题 - 2.7.4. `绝对定位（固定定位）会完全压住盒子 ` 浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片） 但是绝对定位（固定定位） 会压住下面标准流所有的内容。 浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。 文字会围绕浮动元素 子绝父相 子级是绝 对定位的话，父级要用相对定位 - 子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子 - 父盒子需要加定位限制子盒子在父盒子内显示。 - 父盒子布局时，需要占有位置，因此父亲只能是相对定位。 总结： 因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位 当然，子绝父相不是永远不变的，如果父元素不需要占有位置，子绝父绝也会遇到。 元素的显示与隐藏类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现！ 本质：让一个元素在页面中隐藏或者显示出来。 display none：隐藏对象 block： ；除了转换为块级元素之外，同时还有显示元素的意思 display 隐藏元素后，不再占有原来的位置。 visibility visible hidden visibility 隐藏元素后，继续占有原来的位置。 overflow visiable: 不剪切内容也不显示滚动条，默认值。 hidden： 不显示超过对象尺寸的内容，超出部分隐藏 scroll： 不管是否超出内容，总是显示滚动条 auto： 超出自动显示滚动条，不超出不显示滚动条 一般情况下，我们都不想让溢出的内容显示出来，因为溢出的部分会影响布局。但是如果有定位的盒子， 请慎用overflow:hidden 因为它会隐藏多余的部分。 用户界面样式 鼠标样式 cursor: default: 小白（默认） pointer：小手 move： 移动 text： 文本 not-allowed：禁止 1li &#123;cursor: pointer; &#125; outline给表单添加 outline: 0; 或者 outline: none; 样式之后，就可以去掉默认的蓝色边框。 1input &#123;outline: none; &#125; 防止拖拽文本域实际开发中，我们文本域右下角是不可以拖拽的。resize1textarea&#123; resize: none;&#125; vertical-align 属性应用CSS 的 vertical-align 属性使用场景： 经常用于设置图片或者表单(行内块元素）和文字垂直对齐。 官方解释： 用于设置一个元素的垂直对齐方式，但是它只针对于行内元素或者行内块元素有效 1vertical-align : baseline | top | middle | bottom vertical-align baseline: 默认。元素放置父元素基线上。 top：把元素顶端与行中最高元素的顶端对齐 middle：把此元素放置在父元素的中部 bootom： 把元素顶端与行中最低的元素顶端对齐 图片、表单都属于行内块元素，默认默认的 vertical-align 是基线对齐。 此时可以给图片、表单这些行内块元素的 vertical-align 属性设置为 middle 就可以让文字和图片垂直 居中对齐了。 应用场景： 解决图片底部默认空白缝隙问题 bug：图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。主要解决方法有两种： 给图片添加 vertical-align:middle | top| bottom 等。 （提倡使用的） 把图片转换为块级元素 display: block; 溢出文字省略号显示 单行文本溢出显示省略号–必须满足三个条件 123456/*1. 先强制一行内显示文本*/ white-space: nowrap; （ 默认 normal 自动换行） /*2. 超出的部分隐藏*/ overflow: hidden; /*3. 文字用省略号替代超出的部分*/ text-overflow: ellipsis; 多行文本溢出显示省略号 多行文本溢出显示省略号，有较大兼容性问题， 适合于webKit浏览器或移动端（移动端大部分是webkit内 核） 12345678overflow: hidden; text-overflow: ellipsis; /* 弹性伸缩盒子模型显示 */ display: -webkit-box; /* 限制在一个块元素显示的文本的行数 */ -webkit-line-clamp: 2; /* 设置或检索伸缩盒对象的子元素的排列方式 */ -webkit-box-orient: vertical;","categories":[],"tags":[{"name":"Html","slug":"Html","permalink":"https://tqyao.cn/tags/Html/"}]},{"title":"MarkDown 常用语法","slug":"MarkDown-常用语法","date":"2020-09-27T03:11:04.000Z","updated":"2020-09-29T09:40:55.593Z","comments":true,"path":"2020/09/27/MarkDown-常用语法/","link":"","permalink":"https://tqyao.cn/2020/09/27/MarkDown-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/","excerpt":"","text":"本文演示- 斜体** - 粗体 - 斜体加粗 - 删除 - 链接 - 分割线 - 引用 - 标题 - 图片 - 区块代码引用 - 行内代码 - 列表 - 表格 斜体 *斜体*效果：（斜体） 粗体 **粗体**效果：（粗体） 斜体加粗 ***斜体加粗***效果：（**斜体加粗**） 删除 ~~删除~~效果：（删除） 链接 [链接名](url)效果： [点击跳转]（www.jianshu.com）==&gt; http://www.jianshu.com 分割线 --- 或 *** 或 **** 引用 &gt; 效果：引用内容… 标题 一级标题#二级标题##三级标题###四级标题#### … 图片 ! [图片名称] (url) 1.其中图片名称可以为空。直接输入[]就可以2.本编辑器也可以直接把电脑本地的图片拖进来，自动生成图片链接。 区块代码引用 ``` 代码区 ``` 效果： 123456789101112131415161718192021222324252627 public class User &#123; private String username; private String password; public User()&#123;&#125; public String getUsername() &#123; return username; &#125; public void setUsername(String username)&#123; this.username = username; &#125; public String getPassword() &#123; return username; &#125; public void setPassword(String username)&#123; this.username = username; &#125; &#125; 行内代码 语法``效果：显示标注 列表 无序列表 *有序列表1.,2.,3. 效果一： 内容一 内容二 内容三 效果二： 内容一 内容二 内容三 表格 Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。语法： | 表头 | 表头 | | ---- | ---- | | 单元格 | 单元格 | | 单元格 | 单元格 | 我们可以设置表格的对齐方式： -: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。 | 左对齐 | 右对齐 |居中对齐| | :-----| ----: | :----: | | 单元格 | 单元格 | 单元格 | | 单元格 | 单元格 | 单元格 | 显示效果： Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1","categories":[{"name":"基础","slug":"基础","permalink":"https://tqyao.cn/categories/%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"MarkDown","slug":"MarkDown","permalink":"https://tqyao.cn/tags/MarkDown/"}]},{"title":"【基础】 Mysql 事务","slug":"Mysql-事务","date":"2020-09-27T00:13:16.000Z","updated":"2020-09-27T15:38:03.758Z","comments":true,"path":"2020/09/27/Mysql-事务/","link":"","permalink":"https://tqyao.cn/2020/09/27/Mysql-%E4%BA%8B%E5%8A%A1/","excerpt":"","text":"一、 事务 在 MySQL 中只有使用了 Innodb 数据库引擎的数据库或表才支持事务。 事务处理可以用来维护数据库的完整性，保证成批的 SQL 语句要么全部执行，要么全部不执行。 事务用来管理 insert,update,delete 语句 一般来说，事务是必须满足4个条件（ACID）：：原子性（Atomicity，或称不可分割性）、一致性（Consistency）、隔离性（Isolation，又称独立性）、持久性（Durability）。 a. 原子性： 一个事务（transaction）中所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。 事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。 b. 一致性：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则， 这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。 c. 隔离性：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。 事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。 d. 持久性：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。 二、 事务三种常见（DML）数据问题 隔离级别 脏读（Dirty Read） 不可重复读（NonRepeatable Read） 幻读（Phantom Read） 未提交读（Read uncommitted） 可能 可能 可能 已提交读（Read committed） 不可能 可能 可能 可重复读（Repeatable read） 不可能 不可能 可能 可串行化（Serializable ） 不可能 不可能 不可能 InnDB默认是可重复读级别 脏读：事务A开始一个事务对表数据进行操作并未提交，并发事务B查询使用了该数据。事务B使用的数据就叫做脏数据 不可重复读：事务A开始一个事务对表数据进查看，并发事务B开启事务对数据进行了修改并提交，事务A在同一个事务内在次查询数据发现数据不一致。这种同一个事务内两次读取到的数据不一样的，称为不可重复读。 幻读：a. 事务A开启事务对表数据进行修改还未提交，该修改设计到的是该表全部数据（影响了N条数据），并发事务B对该表数据进行了修改并提交，这种修改是向表中插入一行新数据，事务A提交事务后发现其修改影响表数据为（N+1），就好像出现了幻觉一样;b. 事务A开启事务对数据表进行修改还未提交，该修改是正对满足条件的多组（3组）数据（UPDATE … WHERE id IN (‘001’,’002’,’003’) ），并发的事务B对该表数据进行了修改并提交，改修是对表进行删除一条满足事务A修改语句中的一行数据（ DELETE … WHERE id = ‘001’），事务A提交后发现其修改影响的数据为（2），这种情况就是幻读。 三事务的四大特性之一——————隔离性(isolation) 未提交读（Read uncommitted）：事务A和事务B，事务A修改了数据，事务B查看到事务A的修改，事务A回滚，事务B读取到的数据是脏数据。这种隔离级别最低，这种级别一般是在理论上存在，数据库隔离级别一般都高于该级别 已提交读（Read committed）：事务A和事务B，事务A提交了的数据事务B才能读取到，这种隔离级别高于读未提交，换句话说，对方事物提交之后的数据，我当前事物才能读取到这种级别可以避免“脏数据”，这种隔离级别会导致“不可重复读取”，Oracle默认隔离级别 可重复读（Repeatable read）：事务A和事务B，事务A对数据进行修改提交，事务B读取不到修改后的数据，这种隔离级别高于读已提交，换句话说，对方提交之后的数据，我还是读取不到，这种隔离级别可以避免“不可重复读取”，达到可重复读取，MySQL默认级别，虽然可以达到可重复读取，但是会导致“幻像读”","categories":[{"name":"基础","slug":"基础","permalink":"https://tqyao.cn/categories/%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"https://tqyao.cn/tags/Mysql/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-09-21T12:50:39.826Z","updated":"2020-09-21T12:50:39.826Z","comments":true,"path":"2020/09/21/hello-world/","link":"","permalink":"https://tqyao.cn/2020/09/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2020-09-21T09:56:40.000Z","updated":"2020-09-23T13:10:21.363Z","comments":true,"path":"2020/09/21/我的第一篇博客/","link":"","permalink":"https://tqyao.cn/2020/09/21/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"第一章内容： spring security 是什么 nihaoa 第二章内容：spring security 怎么使用 第三章内容: spring security 原理讲解 参考文献：xxxx","categories":[{"name":"Diary","slug":"Diary","permalink":"https://tqyao.cn/categories/Diary/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://tqyao.cn/tags/%E9%9A%8F%E7%AC%94/"}]}],"categories":[{"name":"基础","slug":"基础","permalink":"https://tqyao.cn/categories/%E5%9F%BA%E7%A1%80/"},{"name":"Diary","slug":"Diary","permalink":"https://tqyao.cn/categories/Diary/"}],"tags":[{"name":"git","slug":"git","permalink":"https://tqyao.cn/tags/git/"},{"name":"Html","slug":"Html","permalink":"https://tqyao.cn/tags/Html/"},{"name":"MarkDown","slug":"MarkDown","permalink":"https://tqyao.cn/tags/MarkDown/"},{"name":"Mysql","slug":"Mysql","permalink":"https://tqyao.cn/tags/Mysql/"},{"name":"随笔","slug":"随笔","permalink":"https://tqyao.cn/tags/%E9%9A%8F%E7%AC%94/"}]}